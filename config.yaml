# =============================================================================
# Demand Stock Forecasting MLOps - Configuration
# =============================================================================

# Project Information
project:
  name: demand-stock-forecasting-mlops
  version: 1.0.0
  description: MLOps pipeline for Chinese produce market RMB forecasting
  author: Bhupal Lambodhar
  email: btiduwarlambodhar@sandiego.edu
  repository: https://github.com/btlambodh/demand-stock-forecasting-mlops.git

# =============================================================================
# AWS Infrastructure Configuration
# =============================================================================
aws:
  account_id: '346761359662'
  region: us-east-1
  
  # S3 Storage Configuration
  s3:
    bucket_name: sagemaker-us-east-1-346761359662
    data_prefix: data/
    model_prefix: models/
    artifacts_prefix: artifacts/
    logs_prefix: logs/
  
  # SageMaker Configuration
  sagemaker:
    execution_role: arn:aws:iam::346761359662:role/service-role/AmazonSageMaker-ExecutionRole-20250511T063988
    model_package_group_name: demand-stock-forecasting-mlops-models
    
    # Training Configuration
    instance_type_training: ml.m5.xlarge
    instance_count: 1
    max_runtime_seconds: 86400
    
    # Inference Configuration
    instance_type_inference: ml.t2.medium
    
    # Endpoint Configuration
    endpoint_config:
      initial_instance_count: 1
      instance_type: ml.t2.medium
      variant_weight: 1
      auto_scaling:
        min_capacity: 1
        max_capacity: 10
        target_value: 70.0
    
    # Feature Store Configuration
    feature_store:
      enabled: true
      feature_group_prefix: demand-stock-forecasting-mlops-features
      online_store_enabled: true
      offline_store_enabled: true
      enable_glue_catalog: true
      batch_ingestion_size: 1000
  
  # CloudWatch Configuration
  cloudwatch:
    log_group: /aws/sagemaker/demand-stock-forecasting-mlops
    metrics_namespace: DemandStockForecastingMLOps
  
  # Athena Configuration
  athena:
    database_name: demand_stock_forecasting_mlops_feature_store
    query_results_location: s3://sagemaker-us-east-1-346761359662/athena-results/
    workgroup: primary

# =============================================================================
# Data Configuration
# =============================================================================
data:
  # Raw Data Files
  raw_files:
    item_master: data/raw/annex1.csv
    sales_transactions: data/raw/annex2.csv
    wholesale_prices: data/raw/annex3.csv
    loss_rates: data/raw/annex4.csv
  
  # Processed Data Files
  processed_files:
    train: data/processed/train.parquet
    validation: data/processed/validation.parquet
    test: data/processed/test.parquet
    features: data/processed/features.parquet
  
  # Data Validation Rules
  validation:
    date_range:
      start: '2020-01-01'
      end: '2024-12-31'
    min_data_points: 100
    max_missing_percentage: 0.1

# =============================================================================
# Feature Engineering Configuration
# =============================================================================
features:
  # Temporal Features
  temporal:
    lag_features: [1, 7, 14, 30]
    window_sizes: [7, 14, 30, 90]
    seasonality:
      daily: false
      weekly: true
      monthly: true
      yearly: true
  
  # Price Features
  price:
    percentage_change: true
    price_ratios: true
    moving_averages: [7, 14, 30]
    volatility_windows: [7, 14, 30]
  
  # External Features
  external:
    holidays: true
    exchange_rate: true
    weather: false

# =============================================================================
# Model Configuration
# =============================================================================
models:
  # Statistical Models
  statistical:
    arima:
      seasonal: true
      max_p: 5
      max_q: 5
      max_d: 2
    
    prophet:
      seasonality_mode: additive
      daily_seasonality: false
      weekly_seasonality: true
      yearly_seasonality: true
  
  # Neural Network Models
  neural_networks:
    lstm:
      hidden_units: [64, 32]
      dropout: 0.2
      learning_rate: 0.001
      batch_size: 32
      epochs: 100
    
    gru:
      hidden_units: [64, 32]
      dropout: 0.2
      learning_rate: 0.001
      batch_size: 32
      epochs: 100
    
    transformer:
      d_model: 64
      n_heads: 8
      num_layers: 4
      dropout: 0.1
      batch_size: 32
      epochs: 100
  
  # Ensemble Configuration
  ensemble:
    method: weighted_average
    weights: auto
  
  # Hyperparameter Tuning
  hyperparameter_tuning:
    method: bayesian
    objective_metric: validation:mape
    max_jobs: 20
    max_parallel_jobs: 4

# =============================================================================
# Training Configuration
# =============================================================================
training:
  # Data Split Ratios
  train_ratio: 0.7
  validation_ratio: 0.15
  test_ratio: 0.15
  
  # Cross Validation
  cross_validation:
    method: time_series_split
    n_splits: 5
    test_size: 30
  
  # Early Stopping
  early_stopping:
    patience: 10
    min_delta: 0.001
    restore_best_weights: true

# =============================================================================
# Evaluation Configuration
# =============================================================================
evaluation:
  # Forecast Horizons (days)
  forecast_horizons: [1, 7, 14, 30]
  
  # Evaluation Metrics
  metrics: [mae, mse, rmse, mape, smape, r2]
  
  # Performance Thresholds
  thresholds:
    mape_threshold: 15.0
    rmse_threshold: 5.0
    r2_threshold: 0.7

# =============================================================================
# Deployment Configuration
# =============================================================================
deployment:
  # Environment-specific Settings
  environments:
    dev:
      instance_type: ml.t2.medium
      auto_scaling_enabled: false
    
    staging:
      instance_type: ml.m5.large
      auto_scaling_enabled: true
      min_capacity: 1
      max_capacity: 3
    
    prod:
      instance_type: ml.m5.xlarge
      auto_scaling_enabled: true
      min_capacity: 2
      max_capacity: 10
  
  # Blue-Green Deployment
  blue_green:
    enabled: true
    traffic_shift_percentage: 10
    evaluation_period: 300
  
  # Rollback Configuration
  rollback:
    auto_rollback_enabled: true
    performance_threshold: 0.2

# =============================================================================
# Monitoring and Alerts
# =============================================================================
monitoring:
  # Performance Monitoring
  performance:
    monitoring_window: 7
    performance_degradation_threshold: 0.15
    drift_threshold: 0.25
    cpu_threshold: 80
    memory_threshold: 85
    disk_threshold: 90
  
  # Data Quality Monitoring
  data_quality:
    schema_validation: true
    missing_data_threshold: 0.05
    outlier_threshold: 3.0
  
  # Alert Configuration
  alerts:
    enabled: true
    local_mode: true
    cooldown_minutes: 30
    email: btiduwarlambodhar@sandiego.edu
    sns_topic: arn:aws:sns:us-east-1:346761359662:demand-stock-forecast-alerts
    slack_webhook: null

# =============================================================================
# Security Configuration
# =============================================================================
security:
  # Encryption Settings
  encryption:
    s3_encryption: AES256
    kms_key_id: null
  
  # VPC Configuration
  vpc:
    enabled: false
    vpc_id: null
    subnet_ids: []
    security_group_ids: []

# =============================================================================
# Cost Optimization
# =============================================================================
cost_optimization:
  # Spot Instances
  spot_instances:
    enabled: false
    max_price: '0.50'
  
  # Scheduled Scaling
  scheduled_scaling:
    enabled: true
    timezone: Asia/Shanghai
    scale_up_cron: 0 8 * * *    # Scale up at 8 AM
    scale_down_cron: 0 18 * * * # Scale down at 6 PM

# =============================================================================
# Testing Configuration
# =============================================================================
testing:
  # Unit Tests
  unit_tests:
    coverage_threshold: 80
  
  # Integration Tests
  integration_tests:
    data_quality_tests: true
    model_performance_tests: true
    endpoint_tests: true
  
  # Load Testing
  load_testing:
    duration_minutes: 10
    max_requests_per_second: 100

# =============================================================================
# Logging Configuration
# =============================================================================
logging:
  level: INFO
  format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  handlers: [console, file, cloudwatch]