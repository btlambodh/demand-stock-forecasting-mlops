{
  "test_data_generated": "2025-06-22T01:32:18.103813",
  "generator_version": "2.0",
  "output_directory": "data/example",
  "total_files": 14,
  "data_format": {
    "single_prediction": {
      "structure": "{ \"features\": { ... } }",
      "example_files": [
        "basic_test.json",
        "high_volume_test.json"
      ]
    },
    "batch_prediction": {
      "structure": "{ \"instances\": [{ ... }, { ... }] }",
      "example_files": [
        "batch_test.json"
      ]
    }
  },
  "test_scenarios": {
    "basic_test": "Basic test case matching exact specification",
    "high_volume_test": "High volume sales scenario (450+ units)",
    "low_volume_test": "Low volume sales scenario (35 units)",
    "high_volatility_test": "High price volatility scenario",
    "holiday_peak_test": "National Day holiday peak demand",
    "spring_fresh_test": "Spring fresh produce season",
    "summer_peak_test": "Summer peak demand scenario",
    "weekend_shopping_test": "Weekend shopping pattern",
    "batch_test": "Batch prediction with 8 diverse scenarios"
  },
  "feature_structure": {
    "required_features": [
      "Total_Quantity",
      "Avg_Price",
      "Transaction_Count",
      "Price_Volatility",
      "Min_Price",
      "Max_Price",
      "Discount_Count",
      "Revenue",
      "Discount_Rate",
      "Price_Range",
      "Wholesale Price (RMB/kg)",
      "Loss Rate (%)",
      "Month",
      "DayOfWeek",
      "IsWeekend",
      "Year",
      "Quarter",
      "DayOfYear",
      "WeekOfYear"
    ],
    "feature_count": 19,
    "note": "These basic features will be expanded to 90 features by the inference script"
  },
  "sagemaker_usage": {
    "deploy_command": "python fixed_sagemaker_deploy.py --config config.yaml --action deploy --model-path models/best_model.pkl --model-name chinese-produce-forecaster --endpoint-name produce-forecast-test",
    "test_commands": [
      "python fixed_sagemaker_deploy.py --config config.yaml --action test --endpoint-name produce-forecast-test --test-data data/example/basic_test.json",
      "python fixed_sagemaker_deploy.py --config config.yaml --action test --endpoint-name produce-forecast-test --test-data data/example/batch_test.json",
      "python fixed_sagemaker_deploy.py --config config.yaml --action test --endpoint-name produce-forecast-test --test-data data/example/high_volatility_test.json"
    ],
    "cleanup_command": "python fixed_sagemaker_deploy.py --config config.yaml --action delete --endpoint-name produce-forecast-test"
  },
  "direct_api_usage": {
    "curl_example": "curl -X POST https://your-endpoint.amazonaws.com/invocations -H 'Content-Type: application/json' -d @data/example/basic_test.json",
    "boto3_example": "import boto3; runtime = boto3.client('sagemaker-runtime'); response = runtime.invoke_endpoint(EndpointName='your-endpoint', ContentType='application/json', Body=json.dumps(test_data))"
  },
  "validation_notes": {
    "feature_engineering": "Input features are automatically expanded to 90 features by the inference script",
    "data_types": "All numeric values should be float or int",
    "missing_values": "Any missing basic features will be filled with realistic defaults",
    "expected_output": "JSON response with predictions, confidence scores, and metadata"
  }
}